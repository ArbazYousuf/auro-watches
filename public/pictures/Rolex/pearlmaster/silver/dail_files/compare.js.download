;
(function () {
    /*
     * This is a helper that checks for the equality of two operands
     *
     */
    var name = "compare";

    function register(Handlebars) {

        function helper(lvalue, operator, rvalue, options) {

            var operators, result;

            if (arguments.length < 3) {
                throw new Error("Handlebars Helper 'compare' needs minimum of 2 parameters");
            }

            if (options === undefined) {
                options = rvalue;
                rvalue = operator;
                operator = "===";
            }

            operators = {
                '==': function (l, r) {
                    return l == r;
                },
                '===': function (l, r) {
                    return l === r;
                },
                '!=': function (l, r) {
                    return l != r;
                },
                '!==': function (l, r) {
                    return l !== r;
                },
                '<': function (l, r) {
                    return l < r;
                },
                '>': function (l, r) {
                    return l > r;
                },
                '<=': function (l, r) {
                    return l <= r;
                },
                '>=': function (l, r) {
                    return l >= r;
                },
                'typeof': function (l, r) {
                    return typeof l == r;
                }
            };

            if (!operators[operator]) {
                throw new Error("Handlebars Helper 'compare' doesn't know the operator " + operator);
            }

            result = operators[operator](lvalue, rvalue);

            if (result) {
                return options.fn(this);
            } else {
                return options.inverse(this);
            }
        }

        Handlebars.registerHelper(name, helper);

        return helper;
    }


    if (typeof define == "function") { // Running on client, define with require
        define("tpl/helpers/" + name, ['handlebars'], register);
    } else { // Running on server, register right away.
        register(Handlebars);
    }
})();
